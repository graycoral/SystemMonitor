// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: system_monitor.proto

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>

#include <algorithm>

#include "system_monitor.pb.h"
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace systemmonitor {
class CpuUsageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CpuUsageRequest>
      _instance;
} _CpuUsageRequest_default_instance_;
class CpuUsageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CpuUsageResponse>
      _instance;
} _CpuUsageResponse_default_instance_;
class MemoryUsageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemoryUsageRequest>
      _instance;
} _MemoryUsageRequest_default_instance_;
class MemoryUsageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemoryUsageResponse>
      _instance;
} _MemoryUsageResponse_default_instance_;
class DiskUsageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiskUsageRequest>
      _instance;
} _DiskUsageRequest_default_instance_;
class DiskUsageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiskUsageResponse>
      _instance;
} _DiskUsageResponse_default_instance_;
}  // namespace systemmonitor
namespace protobuf_system_5fmonitor_2eproto {
static void InitDefaultsCpuUsageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::systemmonitor::_CpuUsageRequest_default_instance_;
    new (ptr)::systemmonitor::CpuUsageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::systemmonitor::CpuUsageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CpuUsageRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsCpuUsageRequest},
    {}};

static void InitDefaultsCpuUsageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::systemmonitor::_CpuUsageResponse_default_instance_;
    new (ptr)::systemmonitor::CpuUsageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::systemmonitor::CpuUsageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CpuUsageResponse = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsCpuUsageResponse},
    {}};

static void InitDefaultsMemoryUsageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::systemmonitor::_MemoryUsageRequest_default_instance_;
    new (ptr)::systemmonitor::MemoryUsageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::systemmonitor::MemoryUsageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemoryUsageRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsMemoryUsageRequest},
    {}};

static void InitDefaultsMemoryUsageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::systemmonitor::_MemoryUsageResponse_default_instance_;
    new (ptr)::systemmonitor::MemoryUsageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::systemmonitor::MemoryUsageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemoryUsageResponse = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsMemoryUsageResponse},
    {}};

static void InitDefaultsDiskUsageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::systemmonitor::_DiskUsageRequest_default_instance_;
    new (ptr)::systemmonitor::DiskUsageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::systemmonitor::DiskUsageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiskUsageRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsDiskUsageRequest},
    {}};

static void InitDefaultsDiskUsageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::systemmonitor::_DiskUsageResponse_default_instance_;
    new (ptr)::systemmonitor::DiskUsageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::systemmonitor::DiskUsageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiskUsageResponse = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsDiskUsageResponse},
    {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CpuUsageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CpuUsageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemoryUsageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemoryUsageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiskUsageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiskUsageResponse.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32
    TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::CpuUsageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::CpuUsageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::CpuUsageResponse, usage_percent_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::MemoryUsageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::MemoryUsageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::MemoryUsageResponse, used_memory_mb_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::MemoryUsageResponse, total_memory_mb_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::DiskUsageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::DiskUsageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::DiskUsageResponse, used_disk_gb_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::systemmonitor::DiskUsageResponse, total_disk_gb_),
};
static const ::google::protobuf::internal::MigrationSchema
    schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, sizeof(::systemmonitor::CpuUsageRequest)},
        {5, -1, sizeof(::systemmonitor::CpuUsageResponse)},
        {11, -1, sizeof(::systemmonitor::MemoryUsageRequest)},
        {16, -1, sizeof(::systemmonitor::MemoryUsageResponse)},
        {23, -1, sizeof(::systemmonitor::DiskUsageRequest)},
        {28, -1, sizeof(::systemmonitor::DiskUsageResponse)},
};

static ::google::protobuf::Message const* const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::systemmonitor::_CpuUsageRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::systemmonitor::_CpuUsageResponse_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::systemmonitor::_MemoryUsageRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::systemmonitor::_MemoryUsageResponse_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::systemmonitor::_DiskUsageRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::systemmonitor::_DiskUsageResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors("system_monitor.proto", schemas, file_default_instances,
                    TableStruct::offsets, file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&)
    GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
      protodesc_cold) = {
      "\n\024system_monitor.proto\022\rsystemmonitor\"\021\n"
      "\017CpuUsageRequest\")\n\020CpuUsageResponse\022\025\n\r"
      "usage_percent\030\001 \001(\002\"\024\n\022MemoryUsageReques"
      "t\"F\n\023MemoryUsageResponse\022\026\n\016used_memory_"
      "mb\030\001 \001(\002\022\027\n\017total_memory_mb\030\002 "
      "\001(\002\"\022\n\020Dis"
      "kUsageRequest\"@\n\021DiskUsageResponse\022\024\n\014us"
      "ed_disk_gb\030\001 \001(\002\022\025\n\rtotal_disk_gb\030\002 \001(\0022"
      "\221\002\n\rSystemMonitor\022P\n\013GetCpuUsage\022\036.syste"
      "mmonitor.CpuUsageRequest\032\037.systemmonitor"
      ".CpuUsageResponse\"\000\022Y\n\016GetMemoryUsage\022!."
      "systemmonitor.MemoryUsageRequest\032\".syste"
      "mmonitor.MemoryUsageResponse\"\000\022S\n\014GetDis"
      "kUsage\022\037.systemmonitor.DiskUsageRequest\032"
      " .systemmonitor.DiskUsageResponse\"\000b\006pro"
      "to3"};
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 563);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
      "system_monitor.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;
}  // namespace protobuf_system_5fmonitor_2eproto
namespace systemmonitor {

// ===================================================================

void CpuUsageRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CpuUsageRequest::CpuUsageRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_CpuUsageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:systemmonitor.CpuUsageRequest)
}
CpuUsageRequest::CpuUsageRequest(const CpuUsageRequest& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:systemmonitor.CpuUsageRequest)
}

void CpuUsageRequest::SharedCtor() {}

CpuUsageRequest::~CpuUsageRequest() {
  // @@protoc_insertion_point(destructor:systemmonitor.CpuUsageRequest)
  SharedDtor();
}

void CpuUsageRequest::SharedDtor() {}

void CpuUsageRequest::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* CpuUsageRequest::descriptor() {
  ::protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const CpuUsageRequest& CpuUsageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_CpuUsageRequest.base);
  return *internal_default_instance();
}

void CpuUsageRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:systemmonitor.CpuUsageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  _internal_metadata_.Clear();
}

bool CpuUsageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:systemmonitor.CpuUsageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
        input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:systemmonitor.CpuUsageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:systemmonitor.CpuUsageRequest)
  return false;
#undef DO_
}

void CpuUsageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:systemmonitor.CpuUsageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:systemmonitor.CpuUsageRequest)
}

::google::protobuf::uint8*
CpuUsageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:systemmonitor.CpuUsageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:systemmonitor.CpuUsageRequest)
  return target;
}

size_t CpuUsageRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:systemmonitor.CpuUsageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CpuUsageRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:systemmonitor.CpuUsageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CpuUsageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const CpuUsageRequest>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:systemmonitor.CpuUsageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:systemmonitor.CpuUsageRequest)
    MergeFrom(*source);
  }
}

void CpuUsageRequest::MergeFrom(const CpuUsageRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:systemmonitor.CpuUsageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;
}

void CpuUsageRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:systemmonitor.CpuUsageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CpuUsageRequest::CopyFrom(const CpuUsageRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:systemmonitor.CpuUsageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CpuUsageRequest::IsInitialized() const { return true; }

void CpuUsageRequest::Swap(CpuUsageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CpuUsageRequest::InternalSwap(CpuUsageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CpuUsageRequest::GetMetadata() const {
  protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// ===================================================================

void CpuUsageResponse::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CpuUsageResponse::kUsagePercentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CpuUsageResponse::CpuUsageResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_CpuUsageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:systemmonitor.CpuUsageResponse)
}
CpuUsageResponse::CpuUsageResponse(const CpuUsageResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  usage_percent_ = from.usage_percent_;
  // @@protoc_insertion_point(copy_constructor:systemmonitor.CpuUsageResponse)
}

void CpuUsageResponse::SharedCtor() { usage_percent_ = 0; }

CpuUsageResponse::~CpuUsageResponse() {
  // @@protoc_insertion_point(destructor:systemmonitor.CpuUsageResponse)
  SharedDtor();
}

void CpuUsageResponse::SharedDtor() {}

void CpuUsageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CpuUsageResponse::descriptor() {
  ::protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const CpuUsageResponse& CpuUsageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_CpuUsageResponse.base);
  return *internal_default_instance();
}

void CpuUsageResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:systemmonitor.CpuUsageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  usage_percent_ = 0;
  _internal_metadata_.Clear();
}

bool CpuUsageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:systemmonitor.CpuUsageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float usage_percent = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
              input, &usage_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:systemmonitor.CpuUsageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:systemmonitor.CpuUsageResponse)
  return false;
#undef DO_
}

void CpuUsageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:systemmonitor.CpuUsageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // float usage_percent = 1;
  if (this->usage_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
        1, this->usage_percent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:systemmonitor.CpuUsageResponse)
}

::google::protobuf::uint8*
CpuUsageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:systemmonitor.CpuUsageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // float usage_percent = 1;
  if (this->usage_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(
        1, this->usage_percent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:systemmonitor.CpuUsageResponse)
  return target;
}

size_t CpuUsageResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:systemmonitor.CpuUsageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // float usage_percent = 1;
  if (this->usage_percent() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CpuUsageResponse::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:systemmonitor.CpuUsageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CpuUsageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const CpuUsageResponse>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:systemmonitor.CpuUsageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:systemmonitor.CpuUsageResponse)
    MergeFrom(*source);
  }
}

void CpuUsageResponse::MergeFrom(const CpuUsageResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:systemmonitor.CpuUsageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.usage_percent() != 0) {
    set_usage_percent(from.usage_percent());
  }
}

void CpuUsageResponse::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:systemmonitor.CpuUsageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CpuUsageResponse::CopyFrom(const CpuUsageResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:systemmonitor.CpuUsageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CpuUsageResponse::IsInitialized() const { return true; }

void CpuUsageResponse::Swap(CpuUsageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CpuUsageResponse::InternalSwap(CpuUsageResponse* other) {
  using std::swap;
  swap(usage_percent_, other->usage_percent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CpuUsageResponse::GetMetadata() const {
  protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// ===================================================================

void MemoryUsageRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryUsageRequest::MemoryUsageRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_MemoryUsageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:systemmonitor.MemoryUsageRequest)
}
MemoryUsageRequest::MemoryUsageRequest(const MemoryUsageRequest& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:systemmonitor.MemoryUsageRequest)
}

void MemoryUsageRequest::SharedCtor() {}

MemoryUsageRequest::~MemoryUsageRequest() {
  // @@protoc_insertion_point(destructor:systemmonitor.MemoryUsageRequest)
  SharedDtor();
}

void MemoryUsageRequest::SharedDtor() {}

void MemoryUsageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemoryUsageRequest::descriptor() {
  ::protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const MemoryUsageRequest& MemoryUsageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_MemoryUsageRequest.base);
  return *internal_default_instance();
}

void MemoryUsageRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:systemmonitor.MemoryUsageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  _internal_metadata_.Clear();
}

bool MemoryUsageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:systemmonitor.MemoryUsageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
        input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:systemmonitor.MemoryUsageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:systemmonitor.MemoryUsageRequest)
  return false;
#undef DO_
}

void MemoryUsageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:systemmonitor.MemoryUsageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:systemmonitor.MemoryUsageRequest)
}

::google::protobuf::uint8*
MemoryUsageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:systemmonitor.MemoryUsageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:systemmonitor.MemoryUsageRequest)
  return target;
}

size_t MemoryUsageRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:systemmonitor.MemoryUsageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemoryUsageRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:systemmonitor.MemoryUsageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryUsageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const MemoryUsageRequest>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:systemmonitor.MemoryUsageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:systemmonitor.MemoryUsageRequest)
    MergeFrom(*source);
  }
}

void MemoryUsageRequest::MergeFrom(const MemoryUsageRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:systemmonitor.MemoryUsageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;
}

void MemoryUsageRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:systemmonitor.MemoryUsageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryUsageRequest::CopyFrom(const MemoryUsageRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:systemmonitor.MemoryUsageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryUsageRequest::IsInitialized() const { return true; }

void MemoryUsageRequest::Swap(MemoryUsageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryUsageRequest::InternalSwap(MemoryUsageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemoryUsageRequest::GetMetadata() const {
  protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// ===================================================================

void MemoryUsageResponse::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryUsageResponse::kUsedMemoryMbFieldNumber;
const int MemoryUsageResponse::kTotalMemoryMbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryUsageResponse::MemoryUsageResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_MemoryUsageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:systemmonitor.MemoryUsageResponse)
}
MemoryUsageResponse::MemoryUsageResponse(const MemoryUsageResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&used_memory_mb_, &from.used_memory_mb_,
           static_cast<size_t>(reinterpret_cast<char*>(&total_memory_mb_) -
                               reinterpret_cast<char*>(&used_memory_mb_)) +
               sizeof(total_memory_mb_));
  // @@protoc_insertion_point(copy_constructor:systemmonitor.MemoryUsageResponse)
}

void MemoryUsageResponse::SharedCtor() {
  ::memset(&used_memory_mb_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&total_memory_mb_) -
                               reinterpret_cast<char*>(&used_memory_mb_)) +
               sizeof(total_memory_mb_));
}

MemoryUsageResponse::~MemoryUsageResponse() {
  // @@protoc_insertion_point(destructor:systemmonitor.MemoryUsageResponse)
  SharedDtor();
}

void MemoryUsageResponse::SharedDtor() {}

void MemoryUsageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemoryUsageResponse::descriptor() {
  ::protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const MemoryUsageResponse& MemoryUsageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_MemoryUsageResponse.base);
  return *internal_default_instance();
}

void MemoryUsageResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:systemmonitor.MemoryUsageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::memset(&used_memory_mb_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&total_memory_mb_) -
                               reinterpret_cast<char*>(&used_memory_mb_)) +
               sizeof(total_memory_mb_));
  _internal_metadata_.Clear();
}

bool MemoryUsageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:systemmonitor.MemoryUsageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float used_memory_mb = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
              input, &used_memory_mb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float total_memory_mb = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
              input, &total_memory_mb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:systemmonitor.MemoryUsageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:systemmonitor.MemoryUsageResponse)
  return false;
#undef DO_
}

void MemoryUsageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:systemmonitor.MemoryUsageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // float used_memory_mb = 1;
  if (this->used_memory_mb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
        1, this->used_memory_mb(), output);
  }

  // float total_memory_mb = 2;
  if (this->total_memory_mb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
        2, this->total_memory_mb(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:systemmonitor.MemoryUsageResponse)
}

::google::protobuf::uint8*
MemoryUsageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:systemmonitor.MemoryUsageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // float used_memory_mb = 1;
  if (this->used_memory_mb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(
        1, this->used_memory_mb(), target);
  }

  // float total_memory_mb = 2;
  if (this->total_memory_mb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(
        2, this->total_memory_mb(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:systemmonitor.MemoryUsageResponse)
  return target;
}

size_t MemoryUsageResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:systemmonitor.MemoryUsageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // float used_memory_mb = 1;
  if (this->used_memory_mb() != 0) {
    total_size += 1 + 4;
  }

  // float total_memory_mb = 2;
  if (this->total_memory_mb() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemoryUsageResponse::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:systemmonitor.MemoryUsageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryUsageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const MemoryUsageResponse>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:systemmonitor.MemoryUsageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:systemmonitor.MemoryUsageResponse)
    MergeFrom(*source);
  }
}

void MemoryUsageResponse::MergeFrom(const MemoryUsageResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:systemmonitor.MemoryUsageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.used_memory_mb() != 0) {
    set_used_memory_mb(from.used_memory_mb());
  }
  if (from.total_memory_mb() != 0) {
    set_total_memory_mb(from.total_memory_mb());
  }
}

void MemoryUsageResponse::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:systemmonitor.MemoryUsageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryUsageResponse::CopyFrom(const MemoryUsageResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:systemmonitor.MemoryUsageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryUsageResponse::IsInitialized() const { return true; }

void MemoryUsageResponse::Swap(MemoryUsageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryUsageResponse::InternalSwap(MemoryUsageResponse* other) {
  using std::swap;
  swap(used_memory_mb_, other->used_memory_mb_);
  swap(total_memory_mb_, other->total_memory_mb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemoryUsageResponse::GetMetadata() const {
  protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// ===================================================================

void DiskUsageRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiskUsageRequest::DiskUsageRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_DiskUsageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:systemmonitor.DiskUsageRequest)
}
DiskUsageRequest::DiskUsageRequest(const DiskUsageRequest& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:systemmonitor.DiskUsageRequest)
}

void DiskUsageRequest::SharedCtor() {}

DiskUsageRequest::~DiskUsageRequest() {
  // @@protoc_insertion_point(destructor:systemmonitor.DiskUsageRequest)
  SharedDtor();
}

void DiskUsageRequest::SharedDtor() {}

void DiskUsageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiskUsageRequest::descriptor() {
  ::protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const DiskUsageRequest& DiskUsageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_DiskUsageRequest.base);
  return *internal_default_instance();
}

void DiskUsageRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:systemmonitor.DiskUsageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  _internal_metadata_.Clear();
}

bool DiskUsageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:systemmonitor.DiskUsageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
        input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:systemmonitor.DiskUsageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:systemmonitor.DiskUsageRequest)
  return false;
#undef DO_
}

void DiskUsageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:systemmonitor.DiskUsageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:systemmonitor.DiskUsageRequest)
}

::google::protobuf::uint8*
DiskUsageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:systemmonitor.DiskUsageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:systemmonitor.DiskUsageRequest)
  return target;
}

size_t DiskUsageRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:systemmonitor.DiskUsageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiskUsageRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:systemmonitor.DiskUsageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DiskUsageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const DiskUsageRequest>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:systemmonitor.DiskUsageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:systemmonitor.DiskUsageRequest)
    MergeFrom(*source);
  }
}

void DiskUsageRequest::MergeFrom(const DiskUsageRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:systemmonitor.DiskUsageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;
}

void DiskUsageRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:systemmonitor.DiskUsageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiskUsageRequest::CopyFrom(const DiskUsageRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:systemmonitor.DiskUsageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiskUsageRequest::IsInitialized() const { return true; }

void DiskUsageRequest::Swap(DiskUsageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiskUsageRequest::InternalSwap(DiskUsageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiskUsageRequest::GetMetadata() const {
  protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// ===================================================================

void DiskUsageResponse::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiskUsageResponse::kUsedDiskGbFieldNumber;
const int DiskUsageResponse::kTotalDiskGbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiskUsageResponse::DiskUsageResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_DiskUsageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:systemmonitor.DiskUsageResponse)
}
DiskUsageResponse::DiskUsageResponse(const DiskUsageResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&used_disk_gb_, &from.used_disk_gb_,
           static_cast<size_t>(reinterpret_cast<char*>(&total_disk_gb_) -
                               reinterpret_cast<char*>(&used_disk_gb_)) +
               sizeof(total_disk_gb_));
  // @@protoc_insertion_point(copy_constructor:systemmonitor.DiskUsageResponse)
}

void DiskUsageResponse::SharedCtor() {
  ::memset(&used_disk_gb_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&total_disk_gb_) -
                               reinterpret_cast<char*>(&used_disk_gb_)) +
               sizeof(total_disk_gb_));
}

DiskUsageResponse::~DiskUsageResponse() {
  // @@protoc_insertion_point(destructor:systemmonitor.DiskUsageResponse)
  SharedDtor();
}

void DiskUsageResponse::SharedDtor() {}

void DiskUsageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiskUsageResponse::descriptor() {
  ::protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const DiskUsageResponse& DiskUsageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_system_5fmonitor_2eproto::scc_info_DiskUsageResponse.base);
  return *internal_default_instance();
}

void DiskUsageResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:systemmonitor.DiskUsageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::memset(&used_disk_gb_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&total_disk_gb_) -
                               reinterpret_cast<char*>(&used_disk_gb_)) +
               sizeof(total_disk_gb_));
  _internal_metadata_.Clear();
}

bool DiskUsageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:systemmonitor.DiskUsageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float used_disk_gb = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
              input, &used_disk_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float total_disk_gb = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
              input, &total_disk_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:systemmonitor.DiskUsageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:systemmonitor.DiskUsageResponse)
  return false;
#undef DO_
}

void DiskUsageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:systemmonitor.DiskUsageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // float used_disk_gb = 1;
  if (this->used_disk_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
        1, this->used_disk_gb(), output);
  }

  // float total_disk_gb = 2;
  if (this->total_disk_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
        2, this->total_disk_gb(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:systemmonitor.DiskUsageResponse)
}

::google::protobuf::uint8*
DiskUsageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:systemmonitor.DiskUsageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // float used_disk_gb = 1;
  if (this->used_disk_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(
        1, this->used_disk_gb(), target);
  }

  // float total_disk_gb = 2;
  if (this->total_disk_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(
        2, this->total_disk_gb(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:systemmonitor.DiskUsageResponse)
  return target;
}

size_t DiskUsageResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:systemmonitor.DiskUsageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // float used_disk_gb = 1;
  if (this->used_disk_gb() != 0) {
    total_size += 1 + 4;
  }

  // float total_disk_gb = 2;
  if (this->total_disk_gb() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiskUsageResponse::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:systemmonitor.DiskUsageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DiskUsageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const DiskUsageResponse>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:systemmonitor.DiskUsageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:systemmonitor.DiskUsageResponse)
    MergeFrom(*source);
  }
}

void DiskUsageResponse::MergeFrom(const DiskUsageResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:systemmonitor.DiskUsageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.used_disk_gb() != 0) {
    set_used_disk_gb(from.used_disk_gb());
  }
  if (from.total_disk_gb() != 0) {
    set_total_disk_gb(from.total_disk_gb());
  }
}

void DiskUsageResponse::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:systemmonitor.DiskUsageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiskUsageResponse::CopyFrom(const DiskUsageResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:systemmonitor.DiskUsageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiskUsageResponse::IsInitialized() const { return true; }

void DiskUsageResponse::Swap(DiskUsageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiskUsageResponse::InternalSwap(DiskUsageResponse* other) {
  using std::swap;
  swap(used_disk_gb_, other->used_disk_gb_);
  swap(total_disk_gb_, other->total_disk_gb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiskUsageResponse::GetMetadata() const {
  protobuf_system_5fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_system_5fmonitor_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace systemmonitor
namespace google {
namespace protobuf {
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::systemmonitor::CpuUsageRequest*
Arena::CreateMaybeMessage<::systemmonitor::CpuUsageRequest>(Arena* arena) {
  return Arena::CreateInternal<::systemmonitor::CpuUsageRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::systemmonitor::CpuUsageResponse*
Arena::CreateMaybeMessage<::systemmonitor::CpuUsageResponse>(Arena* arena) {
  return Arena::CreateInternal<::systemmonitor::CpuUsageResponse>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::systemmonitor::MemoryUsageRequest*
Arena::CreateMaybeMessage<::systemmonitor::MemoryUsageRequest>(Arena* arena) {
  return Arena::CreateInternal<::systemmonitor::MemoryUsageRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::systemmonitor::MemoryUsageResponse*
Arena::CreateMaybeMessage<::systemmonitor::MemoryUsageResponse>(Arena* arena) {
  return Arena::CreateInternal<::systemmonitor::MemoryUsageResponse>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::systemmonitor::DiskUsageRequest*
Arena::CreateMaybeMessage<::systemmonitor::DiskUsageRequest>(Arena* arena) {
  return Arena::CreateInternal<::systemmonitor::DiskUsageRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::systemmonitor::DiskUsageResponse*
Arena::CreateMaybeMessage<::systemmonitor::DiskUsageResponse>(Arena* arena) {
  return Arena::CreateInternal<::systemmonitor::DiskUsageResponse>(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
